openapi: 3.0.0
info:
  description: >-
    This API describes the minimum interface that a USS must implement to  be
    part of the USS Network.  This API allows for communication of data  between
    USS Instances and from FIMS to a USS regarding new USS Instances.
  version: "1.0.0-oas3"
  title: USS Required API
  termsOfService: http://uarm.arc.nasa.gov
  contact:
    name: 'NASA Ames Research Center, Aviation Systems Division'
    url: 'https://utm.arc.nasa.gov/'
    email: joseph.rios@nasa.gov
  license:
    name: NASA Open Source Agreement
    url: 'https://ti.arc.nasa.gov/opensource/nosa/'
paths:
  /operations:
    get:
      tags:
        - A. Required Endpoints
      summary: Request information regarding Operations
      description: >-
        Allows querying for Operation data. Returns an empty list if the query
        returns nothing.
      parameters:
        - name: registration_id
          in: query
          description: >-
            Return only results that match the registration_ids provided.  Only
            operations that have not completed or have completed within the last
            24 hours are required to be returned. If multiple IDs are provided,
            they must be unique and separated by commas.
          style: form
          schema:
            type: array
            items:
              type: string
              format: uuid
              minLength: 36
              maxLength: 36
            minItems: 1
            maxItems: 5
            uniqueItems: true
        - name: submit_time
          in: query
          description: >-
            A single date-time value that will be used to provide all operations
            submitted AFTER that time.
          required: false
          schema:
            type: string
            format: date-time
            minLength: 20
            maxLength: 25
        - name: state
          in: query
          description: >-
            Return only operations that are in the states provided.  Comma
            separated list of states.
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
              enum:
                - ACCEPTED
                - ACTIVATED
                - CLOSED
                - NONCONFORMING
                - ROGUE
            minItems: 1
            maxItems: 5
            uniqueItems: true
        - name: distance
          in: query
          description: >-
            Distance from reference_point to find operations. Ignored if
            reference_point is not provided.  Units are feet.  Returns all
            operations that have any operation_volumes whose 2D horizontal
            dimensions interesect the 2D circle defined by distance and
            reference_point.  Default value only has meaning when
            reference_point parameter is provided.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 60762
            default: 300
        - name: reference_point
          in: query
          description: >-
            A single point used to find all operations within some distance from
            that point. Returns all operations that have any operation_volumes
            whose 2D horizontal dimensions interesect the 2D circle defined by
            distance and reference_point.  When distance is excluded and
            reference_point is included, uses default value (300ft) for
            distance. Described as a GeoJSON position.  The value is equivalent
            to what would be seen in the "coordinates" field for a GeoJSON Point
            object.  See https://tools.ietf.org/html/rfc7946#section-3.1.1 for
            further reference.  Example would be reference_point=[-122.056364,
            37.414371] (URL safe:
            reference_point%3D%5B-122.056364%2C%2037.414371%5D). As per GeoJSON
            spec, this is long-lat format in the WGS84 reference system. MUST
            NOT include a third coordinate element, strictly 2D.
          required: false
          schema:
            type: string
            format: geojson-position
        - name: sort
          in: query
          description: >-
            Field name(s) to use for sorting records. If multiple fields are
            provided, the sorting is based on the ordered priorty of that list. 
            Note that the enum provided designates the required fields that a
            USS must support. A USS may decide to support additional fields, but
            how that USS communicates that option is out of scope for this API
            document.
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
              enum:
                - submit_time
                - gufi
                - state
            minItems: 1
            maxItems: 3
            default: submit_time
        - name: sort_increasing
          in: query
          description: >-
            For optional use with the 'sort' parameter. If 'sort' is not
            provided, then 'sort_increasing' will be ignored. Boolean value.  If
            multiple fields are provided in the 'sort' parameter, this boolean
            value will apply to all of them.
          required: false
          schema:
            type: boolean
            default: true
        - name: limit
          in: query
          description: The maximum number or records to return.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            exclusiveMinimum: false
            exclusiveMaximum: false
            default: 10
        - name: offset
          in: query
          description: The index from which to begin the list of returned records.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            exclusiveMinimum: false
            default: 0
      responses:
        '200':
          description: Successful data request. Response includes requested data.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
                  
        '400':
          description: Bad request. Typically validation error. Fix your request and retry.
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
        '401':
          description: Invalid or missing access_token provided.
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
        '403':
          description: >-
            Forbidden. Do not retry with same access token. Reason not provided,
            but do you have the right scopes?
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
        '423':
          description: The requested data are in a transition state. Please retry request.
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
        '429':
          description: Too many recent requests from you. Wait to make further queries.
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
  '/operations/{gufi}':
    get:
      tags:
        - A. Required Endpoints
      summary: Retrieve an operation by GUFI.
      description: Retrieve an operation by GUFI.  Returns 404 if gufi is not found.
      parameters:
        - in: path
          name: gufi
          required: true
          description: GUFI of the operation being requested.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
        '400':
          description: Bad request. Typically validation error. Fix your request and retry.
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
        '401':
          description: Invalid or missing access_token provided.
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
        '403':
          description: >-
            Forbidden. Do not retry with same access token. Reason not provided,
            but do you have the right scopes?
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
        '404':
          description: Resource not found.
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
        '423':
          description: The requested data are in a transition state. Please retry request.
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
    put:
      tags:
        - A. Required Endpoints
      summary: 'Announce a new, or update an already announced operation.'
      description: >-
        Announce an Operation to another USS, either initial Operation or an
        update to the Operation. The Operation's owner creates the ID.
      parameters:
        - in: path
          name: gufi
          required: true
          description: PUT operation by gufi
          schema:
            type: string
      responses:
        '204':
          description: Operation data received. No content returned.
        '400':
          description: Bad request. Typically validation error. Fix your request and retry.
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
        '401':
          description: Invalid or missing access_token provided.
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
        '403':
          description: Forbidden. Data and or token do not meet security requirements.
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
        '409':
          description: >-
            Conflict. This USS has an Operation that intersects. 'messages'
            field in UTMRestResponse will contain list of GUFIs of length at
            least 1 indicating the conflicting Operation(s).
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
        '429':
          description: Too many recent requests from you. Wait to make further queries.
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/openapi/v2/schema/uam-domain-commons-2.0.yaml#/definitions/UTMRestResponse
      requestBody:
        content:
          application/json:
            schema:
              $ref: https://raw.githubusercontent.com/nasa/uam-apis/GCATI-178/datacollection/openapi/v2/schema/schema-uam-gcdmp-operations-2.0.yaml#/definitions/op
        
        description:  Operational plan
          
        required: true
servers:
  - url: 'https://uss.defined.url/'