openapi: 3.0.0
info:
  description: |-
    X3 Data Models
  version: "1.0.0"
  title: X3 Data Models

paths:
  /waypoint:
      post:
        summary: Upload an array of the Waypoint models
        responses:
            '200':
              $ref: '#/components/responses/r200'
            '204':
              $ref: '#/components/responses/r204'
            '400':
              $ref: '#/components/responses/r400'
            '401':
              $ref: '#/components/responses/r400'
            '403':
              $ref: '#/components/responses/r403'
            '409':
              $ref: '#/components/responses/r409'
            '429':
              $ref: '#/components/responses/r429'
            '500':
              $ref: '#/components/responses/r500'
        requestBody:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Waypoint'
          description: Upload array of Waypoint models
          required: true

  /psu-exchange:
    post:
      summary: Upload an array of PSUExchange models
      responses:
        '200':
          $ref: '#/components/responses/r200'
        '204':
          $ref: '#/components/responses/r204'
        '400':
          $ref: '#/components/responses/r400'
        '401':
          $ref: '#/components/responses/r400'
        '403':
          $ref: '#/components/responses/r403'
        '409':
          $ref: '#/components/responses/r409'
        '429':
          $ref: '#/components/responses/r429'
        '500':
          $ref: '#/components/responses/r500'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PSUExchange'
        description: Upload an object of models, containing array of psu exchange
        required: true

  /metadata:
    post:
      summary: Upload an array of FlightRunMetadata models
      responses:
        '200':
          $ref: '#/components/responses/r200'
        '204':
          $ref: '#/components/responses/r204'
        '400':
          $ref: '#/components/responses/r400'
        '401':
          $ref: '#/components/responses/r400'
        '403':
          $ref: '#/components/responses/r403'
        '409':
          $ref: '#/components/responses/r409'
        '429':
          $ref: '#/components/responses/r429'
        '500':
          $ref: '#/components/responses/r500'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FlightRunMetadata'
        description: Upload an object of models, containing array of flight run metadata
        required: true

components:
  schemas:
    Timestamp:
      description: >-
        Timestamps MUST follow the guidance set forth in RFC3339.
        Note that this format specifies UTC time indicated by a trailing 'Z'.
        Note that this format specifies date and time separation with a 'T'.
      type: string
      format: date-time
      minLength: 24
      maxLength: 24
      pattern: "^([0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]{3})Z$"
      example: '2015-08-20T14:11:56.118Z'

    LatLonAlt:
      type: object
      required:
        - latitude
        - longitude
        - altitude
      description: >-
        Object used to define a location. Latitude and Longitude should have precision of 7 or more digits. WGS84 altitude. (ft)
      properties:
        latitude:
          description: >-
            Degrees of latitude north of the equator, with reference to the WGS84 ellipsoid. Should have precision of 7 or more digits.
          type: number
          format: double
        longitude:
          description: >-
            Degrees of longitude east of the Prime Meridian, with reference to the WGS84 ellipsoid. Should have precision of 7 or more digits.
          type: number
          format: double
        altitude:
          description: >-
            The numeric value of the WGS84 altitude.
          type: number
          format: double

    UTMRestResponse:
      type: object
      required:
        - http_status_code
        - message
      properties:
        http_status_code:
          type: integer
          minimum: 100
          exclusiveMinimum: false
          maximum: 599
          exclusiveMaximum: false
        message:
          type: string
          maxLength: 500
      example:
        http_status_code: 400
        message: Bad Request. Invalid JSON?

    PSUExchange:
        required:
          - "exchanged_data_pk"
          - "exchanged_data_type"
          - "version_number"
          - "source_psu"
          - "target_psu"
          - "reporting_psu_role"
          - "time_request_initiation"
          - "time_request_completed"
          - "actual_http_response"
          - "endpoint"
          - "http_method"
        description: >-
          This model captures performance and interoperability data for a PSU. Since only failure case data is included in the PSU network 'Report' model, it is important to have PSUs self report on nominal elements. This information may inform future performance requirements and forensics of certain incidents. This may be an initial model that will be required operationally in terms of a PSUs need to log interactions with other PSUs.
        properties:
          FRI:
            description: >-
              	Array of Flight Test Run Identifiers, autogenerated by subsystem, in this case partner PSU while submitting flight-run-metadata to NASA Data Pipeline subsystem.
            type: array
            items:
              type: string
              format: uuid
              maxLength: 36
              minLength: 36
              pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
              example: "00000000-0000-4444-8888-FEEDDEADBEEF"
          exchanged_data_pk:
            description: >-
              	The primary key of the data that were exchanged. For example, if an Operation or Constraint was exchanged, then this field would contain the reference ID.

                In the case that multiple data elements were exchanged, then just populate this field with one of the primary keys. As a best practice, choose the first one in the array as they were sent between PSUs.
            type: string
            format: uuid
            maxLength: 36
            minLength: 36
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            example: "00000000-0000-4444-8888-FEEDDEADBEEF"
          exchanged_data_type:
            description: >-
              The data model that is being exchanged. For ‘TELEMETRY’, this model is only provided for the GET endpoint exchanges.
            type: "string"
            enum:
              - OPERATION
              - TELEMETRY
              - CONSTRAINT
              - SUBSCRIPTIONS
              - REPORT
              - OTHER_SEE_COMMENT
            example: "TELEMETRY"
          version_number:
            description: >-
              The version number of the model that was sent. For Operation and Constraint
            type: "integer"
            example: 4
          source_psu:
            description: >-
              This is the name of the source_psu, or discovery.
            type: "string"
            example: "psu.provider123.net"
          target_psu:
            description: >-
              This is the name of the target_psu, or discovery.
            type: "string"
            example: "psu.provider456.net"
          reporting_psu_role:
            description: >-
              An enum indicating if the PSU providing these data was the one that initiated the request (source_psu) or the PSU that received the request (target_psu).
            type: "string"
            enum:
              - SOURCE_PSU
              - TARGET_PSU
            example: "SOURCE_PSU"
          time_request_initiation:
            description: >-
              If SOURCE_PSU, this is the time that the request is sent to the TARGET_USS.
              If TARGET_PSU, this is the time that the request was received from the SOURCE_PSU.
            $ref: '#/components/schemas/Timestamp'
          time_request_completed:
            description: >-
              If SOURCE_PSU, this is the time that the response was received from the TARGET_PSU.
              If TARGET_PSU, this is the time that the request was sent back to the SOURCE_PSU.
            $ref: '#/components/schemas/Timestamp'
          endpoint:
            description: >-
              The endpoint to which the data request was initially sent.
            type: "string"
            example: "https://psu.provider456.net/operations"
          http_method:
            description: >-
              The HTTP method used in this exchange.
            type: string
            enum:
              - GET
              - POST
              - PUT
              - DELETE
              - HEAD
              - TRACE
              - OPTIONS
              - CONNECT
              - PATCH
            example: "PUT"
          expected_http_response:
            description: >-
              The expected HTTP response code.
              This is required ONLY if the reporting_psu_role is source_psu.
            type: "integer"
            minimum: 100
            maximum: 599
            example: 204
          actual_http_response:
            description: >-
              The actual HTTP response code sent by the target_psu to the source_psu.
              Must be reported by USSs in either role.
            type: "integer"
            minimum: 100
            maximum: 599
            example: 204
          comments:
            description: >-
              Any additional comments that could aid in analysis involving these data.
            type: "string"
            maxLength: 1000
            example: "This test was good."

    Waypoint:
        description: A single waypoint with associated data.
        required:
          - id
          - sequence_id
          - waypoint_type
          - waypoint_phase
          - waypoint_location
          - target_time
          - target_ground_speed
          - target_vertical_speed
          - hover_duration
        properties:
          FRI:
            description: >-
              	Flight Test Run Identifier, autogenerated by subsystem, in this case partner PSU while submitting flight-run-metadata to NASA Data Pipeline subsystem.
            type: string
            format: uuid
            maxLength: 36
            minLength: 36
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            example: "00000000-0000-4444-8888-FEEDDEADBEEF"
          id:
            description: >-
              	Universally-unique identifier for an Operation. This is the same value used in the 'id' fields in the Operation data.
            type: string
            format: uuid
            maxLength: 36
            minLength: 36
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            example: "00000000-0000-4444-8888-FEEDDEADBEEF"
          sequence_id:
            description: >-
              	Integer indicating order of this waypoint in the list of waypoints.
                must be sequential starting with 1.
            type: integer
            format: int32
            minimum: 1
            maximum: 9999
            example: 23
          waypoint_type:
            description: Fly over or fly by?
            type: string
            enum:
              - FLY_BY
              - FLY_OVER
          waypoint_phase:
            description: >-
              Phase of flight that the operation will be in at this waypoint. Climb or Descent implies that the vehicle is traveling with some lateral air speed while descending. Vertical implies no lateral speed.
            type: string
            enum:
              - GROUND_TAXI
              - GROUND_HOVER
              - TAKEOFF
              - CLIMB_VERTICAL
              - CLIMB
              - CRUISE
              - DESCENT_VERTICAL
              - DESCENT
              - APPROACH
              - LANDING
          waypoint_location:
            description: >-
              For Lat/Lon, report at least seven decimal degrees. (deg)
              For Alt, express in WGS84 standard. (ft)
            $ref: '#/components/schemas/LatLonAlt'
          target_time:
            description: Targeted time to reach this waypoint.
            $ref: '#/components/schemas/Timestamp'
          target_air_speed:
            description: >-
              The target air speed of the vehicle at this waypoint.
              Units of measure: ft/sec.
            type: integer
            format: int32
            minimum: -9999
            maximum: 9999
            example: 32
          target_ground_speed:
            description: >-
              The target ground speed of the vehicle at this waypoint.
              Units of measure: ft/sec.
            type: integer
            format: int32
            minimum: 0
            maximum: 9999
            example: 32
          target_vertical_speed:
            description: >-
              For climb and descent waypoints, the target speed of climb or descent
              Units of measure: ft/sec.
            type: integer
            format: int32
            minimum: -9999
            maximum: 9999
            example: 32
          hover_duration:
            description: >-
              Number of seconds the vehicle plans to hover or loiter at this waypoint.
            type: integer
            format: int32
            minimum: 0
            maximum: 99999
            example: 120

    FlightRunMetadata:
        description: >-
          This interface allows all the subsystems to setup context for the simulation flight test run. As part of this interface, an identifier is generated, FRI (Flight Run Identifier), this FRI will be embedded into every interface data model exchanged between subsystems. Industry partner PSU subsystem that may include PSU operator capabilities shall submit data as per the data model mentioned in Table-3 to data pipeline subsystem.
        required:
          - FRI
          - FRI_tag
          - flight_type
          - flight_test_run_date_time
          - industry_partner_name
          - test_id
          - scenario_id
          - PSU_url
          - crew
        properties:
          FRI:
            description: >-
                Flight Test Run Identifier, autogenerated by subsystem, in this case partner PSU while submitting flight-run-metadata to NASA Data Pipeline subsystem.
            type: string
            format: uuid
            maxLength: 36
            minLength: 36
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            example: "00000000-0000-4444-8888-FEEDDEADBEEF"
          FRI_tag:
            description: >-
              A tag that can group multiple UAM aircrafts (simulated/real) flight test runs.
            type: string
          flight_type:
            description: >-
                Distinguishing between flight test events.
            type: string
            enum:
              - AIRSPACE_SIMULATION
              - FLIGHT_SIMULATION
              - LIVE_FLIGHT
          flight_test_run_date_time:
            description: Timestamp information about the start of the flight test event run.
            $ref: '#/components/schemas/Timestamp'
          industry_partner_name:
            description: >-
              Name of the industry partner
            type: string
          test_id:
            description: >-
                Distinguishing the event name, in this case the value is X3.
            type: string
            enum:
              - X3
              - X4
              - VIRTUAL_DRY_RUN
              - BUILDUP_RUN_1
              - BUILDUP_RUN_2
              - BUILDUP_RUN_3
              - DT
          test_description:
            description: >-
              Description of the test like Connectivity test, demonstration, actual test etc..
            type: string
          scenario_id:
            description: >-
                Distinguishing NC Scenarios. SCENARIO_1: Trajectory Planning and Compliance, SCENARIO_2: Aircraft and AOM data exchange and coordination, SCENARIO_3: UAM Port Operations
            type: string
            enum:
              - SCENARIO_1
              - SCENARIO_2
              - SCENARIO_3
          call_sign:
            description: >-
              Unique call sign used to communicate with operators. The call sign will be captured in the communication audio while executing the flight test.
            type: string
          Operation_IDs:
            description: >-
              An array of operations been submitted as part of the FRI. This array shall be updated individually by POST requests if new operations were submitted as part of the FRI.
            type: array
            items:
              type: string
              format: uuid
              maxLength: 36
              minLength: 36
              pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
              example: "00000000-0000-4444-8888-FEEFEEBEAFEE"
          PSU_url:
            description: >-
              Partner PSU URL
            type: string
          crew:
            description: >-
              The crew.
            type: array
            items:
              $ref: '#/components/schemas/CrewMember'

    CrewMember:
        description: >-
          Information pretaining to the member of a crew.
        required:
          - role
        properties:
          name:
            description: >-
                Name of the individual crew member
            type: string
            example: "Skipper Tanner"
          role:
            description: >-
                Role of the individual crew member
            type: string
          email:
            description: >-
                Email of the individual crew member
            type: string



  responses:

    'r200':
      description: okay
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UTMRestResponse'

    'r201':
      description: data created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UTMRestResponse'

    'r204':
      description: no response supplied

    'r400':
      description: Bad request. Typically validation error. Fix your request and retry.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UTMRestResponse'

    'r401':
      description: Invalid or missing access_token provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UTMRestResponse'

    'r403':
      description: >-
        Forbidden. Do not retry with same access token. Reason not provided,
        but do you have the right scopes? Does uss_name match the sub claim?
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UTMRestResponse'

    'r409':
      description: Conflict for a PUT that is unsuccessful due to a 3rd-party modification
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UTMRestResponse'

    'r429':
      description: Too many recent requests from you. Wait to make further queries.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UTMRestResponse'

    'r500':
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UTMRestResponse'
